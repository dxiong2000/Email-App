#
# CSE183 Assignment 9 Backend
#

openapi: '3.0.3'

info:
  description: CSE183 Assignment 9 Backend
  version: 0.1.0
  title: CSE183 Assignment 9 Backend

servers:
  - url: http://localhost:3010/

paths:
  /v0/email:
    get:
      description: Get emails
      parameters:
        - in: query
          name: mailbox
          schema:
            type: string
          description: The type of mailbox
        - in: query
          name: search
          schema:
            type: string
          description: Search string
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailResponse'
        404:
          description: Mailbox Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      description: Posts new email into sent mailbox
      requestBody:
        description: Email to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostEmail'
      responses:
        201:
          description: Posted New Email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
        400:
          description: Submitted Email Has Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v0/mailboxes:
    get:
      description: Get list of mailboxes
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailboxList'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v0/move/{id}:
    put:
      description: Move email into mailbox
      parameters:
        - in: query
          name: mailbox
          description: Name of mailbox
          required: true
          schema:
            type: string
        - in: path
          name: id
          description: ID of email
          required: true
          schema:
            type: string
      responses:
        204:
          description: Email Moved Success
        404:
          description: Email Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v0/emailupdate/{id}:
    put:
      description: Update email
      parameters:
        - in: path
          name: id
          description: ID of email
          required: true
          schema:
            type: string
        - in: query
          name: type
          description: Starred or Unread
          required: true
          schema:
            type: string
      responses:
        204:
          description: Email update success
        500:
          description: Internal server error
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'        
                
  /v0/countstarred:
    get:
      description: Get count of starred emails
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Count'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v0/countunread:
    get:
      description: Get count of unread emails
      parameters:
        - in: query
          name: mailbox
          description: Name of mailbox
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Count'
        404:
          description: Mailbox Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v0/updatename:
    put:
      description: update name
      parameters:
        - in: query
          name: name
          description: New name
          required: true
          schema:
            type: string
      responses:
        204:
          description: Update success
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'   

components:
  schemas:
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    EmailResponse:
      type: array
      items:
        type: object
        properties:
          mailbox:
            type: string
          starred:
            type: boolean
          mail:
            type: array
            items:
              $ref: '#/components/schemas/Email'
    
    Email:
      type: object
      properties:
        id:
          type: string
        to:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
          required:
            - name
            - email
        starred:
          type: boolean
        unread:
          type: boolean
        subject:
          type: string
        sent:
          type: string
        received:
          type: string
        content:
          type: string
        from:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
          required:
            - name
            - email
      required:
        - id
        - to
        - subject
        - sent
        - received
        - from
        - content

    PostEmail:
      type: object
      properties:
        subject:
          type: string
        content:
          type: string
        to:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
          required:
            - name
            - email
      required:
        - subject
        - content
        - to

    MailboxList:
      type: array
      items:
        type: string

    Count:
      type: integer
